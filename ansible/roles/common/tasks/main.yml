---

- name: Create ~vagrant/.ssh directory
  file: path=/home/vagrant/.ssh state=directory mode=0700 owner=vagrant

- name: Copy SSH private key
  copy: src=id_rsa dest=/home/vagrant/.ssh/id_rsa mode=0600 owner=vagrant

- name: Copy SSH public key
  copy: src=id_rsa.pub dest=/home/vagrant/.ssh/id_rsa.pub mode=0644 owner=vagrant

- name: Copy SSH known_hosts
  copy: src=known_hosts dest=/home/vagrant/.ssh/known_hosts mode=0644 owner=vagrant

- name: Copy SSH tunnel service
  copy: src=sshtunnel.upstart.conf dest=/etc/init/sshtunnel.conf

- name: Reload Upstart configuration
  command: initctl reload-configuration

- name: Start SSH tunnel service
  service: name=sshtunnel state=started

- name: Install apt-cacher-ng apt configuration
  copy: src=99apt-cacher-ng dest=/etc/apt/apt.conf.d/99apt-cacher-ng

- name: Install required packages
  apt: pkg={{item}} state=installed update_cache=yes
  with_items:
    - git
    - wget
    - ntp
    - sudo
    - procps
    - htop
    #- munin

- name: Stop puppet service
  service: name=puppet state=stopped

- name: Stop chef-client service
  service: name=chef-client state=stopped

- name: Stop rbcbind service
  service: name=rpcbind state=stopped

#- name: Copy munin-node config
#  template: src=templates/munin-node.conf dest=/etc/munin/munin-node.conf

#- name: Disable some unused munin monitors
#  file: path=/etc/munin/plugins/{{ item }} state=absent
#  with_items:
#    - nfs4_client
#    - nfs_client
#    - nfsd4
#    - nfsd

#- name: Restart munin service
#  service: name=munin-node state=restarted

- name: Create JDK directory
  file: path=/usr/lib/jvm state=directory

- name: Copy and extract JDK tgz
  unarchive: src=jdk-7u71-linux-x64.tar.gz dest=/usr/lib/jvm creates=/usr/lib/jvm/jdk1.7.0_71

- name: Copy Oracle JDK installation script
  copy: src=install-oracle-jdk.sh dest=/home/vagrant/install-oracle-jdk.sh

- name: Run Oracle JDK installation script
  command: chdir=/home/vagrant bash install-oracle-jdk.sh

- name: Create hadoop directory
  file: path=/home/vagrant/hadoop state=directory

- name: Copy and extract Hadoop tgz
  unarchive: src=hadoop-{{hadoop_version}}.tar.gz dest=/home/vagrant/hadoop creates=/home/vagrant/hadoop/hadoop-{{hadoop_version}}

- name: Create hadoop data directory
  file: path=/home/vagrant/data state=directory

- name: Create hadoop namenode directory
  file: path=/home/vagrant/data/namenode-name-dir state=directory owner=vagrant

- name: Create hadoop datanode directory
  file: path=/home/vagrant/data/datanode-data-dir state=directory owner=vagrant

